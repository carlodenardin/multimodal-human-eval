{"problem": "p84", "diagram_type": "fc", "diagram_level": "l1", "generated_code": "\ndef func(n):\n    digit_sum = sum(int(digit) for digit in str(n))\n    return bin(digit_sum)[2:]\n"}
{"problem": "p84", "diagram_type": "fc", "diagram_level": "l2", "generated_code": "\ndef func(n: int) -> str:\n    sum_digits = sum(int(digit) for digit in str(n))\n    res = bin(sum_digits)[2:]\n    return res\n"}
{"problem": "p84", "diagram_type": "fc", "diagram_level": "l3", "generated_code": "\ndef func(n: int) -> str:\n    sum = 0\n    res = \"\"\n    while n > 0:\n        sum += n % 10\n        n //= 10\n    while sum > 0:\n        r = sum % 2\n        sum //= 2\n        res += str(r)\n    return res\n"}
{"problem": "p84", "diagram_type": "bpmn", "diagram_level": "l1", "generated_code": "\ndef func(n):\n    digit_sum = sum(int(digit) for digit in str(n))\n    return bin(digit_sum)[2:]\n"}
{"problem": "p84", "diagram_type": "bpmn", "diagram_level": "l2", "generated_code": "\ndef func(number):\n    sum_digits = 0\n    res = \"\"\n    sum_digits = sum(int(digit) for digit in str(abs(number)))\n    res = bin(sum_digits)[2:]\n    return res\n"}
{"problem": "p84", "diagram_type": "bpmn", "diagram_level": "l3", "generated_code": "\ndef func(n):\n    sum = 0\n    res = \"\"\n    while n > 0:\n        sum += n % 10\n        n = n // 10\n    while sum > 0:\n        r = sum % 2\n        sum //= 10\n        res += str(r)\n    return res\n"}
{"problem": "p84", "diagram_type": "block", "diagram_level": "l1", "generated_code": "\ndef func(n):\n    digit_sum = sum(int(digit) for digit in str(n))\n    return bin(digit_sum)[2:]\n"}
{"problem": "p106", "diagram_type": "fc", "diagram_level": "l1", "generated_code": "\ndef func(n):\n    result = []\n    for i in range(n):\n        if i % 2 == 0:\n            value = 1\n            for j in range(1, i + 1):\n                value *= j\n        else:\n            value = sum(range(1, i + 1))\n        result.append(value)\n    return result\n"}
{"problem": "p106", "diagram_type": "fc", "diagram_level": "l2", "generated_code": "\ndef func(n: int):\n    res = []\n    i = 1\n    while i <= n:\n        if i % 2 == 0:\n            res.append(sum(range(1, i + 1)))\n        else:\n            res.append(prod(range(1, i + 1)))\n        i += 1\n    return res\n\ndef prod(iterable):\n    result = 1\n    for x in iterable:\n        result *= x\n    return result\n"}
{"problem": "p106", "diagram_type": "fc", "diagram_level": "l3", "generated_code": "\ndef func(n: int) -> list:\n    res = []\n    i = 1\n    while i <= n:\n        if i % 2 == 0:\n            x = 1\n            j = 1\n            while j <= i:\n                res.append(x)\n                x = x * j\n                j += 1\n        res.append(x)\n        i += 1\n    return res\n"}
{"problem": "p106", "diagram_type": "bpmn", "diagram_level": "l1", "generated_code": "\ndef func(n):\n    result = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            fact = 1\n            for j in range(1, i + 1):\n                fact *= j\n            result.append(fact)\n        else:\n            summation = sum(range(1, i + 1))\n            result.append(summation)\n    return result\n"}
{"problem": "p106", "diagram_type": "bpmn", "diagram_level": "l2", "generated_code": "\ndef func(n):\n    result = []\n    i = 1\n    while i <= n:\n        if i % 2 == 0:\n            result.append(factorial(i))\n        else:\n            result.append(sum(range(1, i + 1)))\n        i += 1\n    return result\n\ndef factorial(x):\n    return 1 if x == 0 else x * factorial(x - 1)\n"}
{"problem": "p106", "diagram_type": "bpmn", "diagram_level": "l3", "generated_code": "\ndef func(n):\n    result = []\n    i = 1\n    while i <= n:\n        if i % 2 == 0:\n            x = 1\n            j = 1\n            while j <= i:\n                x *= j\n                j += 1\n        else:\n            x = 0\n            j = 1\n            while j <= i:\n                x += j\n                j += 1\n        result.append(x)\n        i += 1\n    return result\n"}
{"problem": "p106", "diagram_type": "block", "diagram_level": "l1", "generated_code": "\ndef func(n):\n    from math import factorial\n    result = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            result.append(factorial(i))\n        else:\n            result.append(sum(range(1, i + 1)))\n    return result\n"}
{"problem": "p108", "diagram_type": "fc", "diagram_level": "l1", "generated_code": "\ndef func(int_list):\n    count = 0\n    for num in int_list:\n        if sum(int(digit) for digit in str(abs(num))) > 0:\n            count += 1\n    return count\n"}
{"problem": "p108", "diagram_type": "fc", "diagram_level": "l2", "generated_code": "\ndef func(arr):\n    res = 0\n    for num in arr:\n        digits = [int(d) for d in str(abs(num))]\n        sum_digits = sum(digits)\n        if sum_digits > 0:\n            res += 1\n    return res\n"}
